/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.client;

import java.awt.event.MouseEvent;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import lbfinance.serverConnector.ServerConnector;
import lbfinancecommon.controller.ClientController;
import lbfinancecommon.controller.GuarentorController;
import lbfinancecommon.controller.LeasedVehicleController;
import lbfinancecommon.controller.LeasingController;
import lbfinancecommon.model.Client;
import lbfinancecommon.model.Guarentor;
import lbfinancecommon.model.LeasedVehicle;
import lbfinancecommon.model.Leasing;

/**
 *
 * @author cmjd
 */
public class SearchCustomerDialog extends javax.swing.JDialog {

    /**
     * Creates new form SearchCustomerDialog
     */
    private JMenuItem viewVehicleDetailsItem;
    private JMenuItem updateVehicleDetailsItem;
    private String title = "LB Finance-Search Customer Form";
    String substring = "";

    public SearchCustomerDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        /*new Thread() {
         public void run() {

         for (int i = 0; i < title.length() + 1; i++) {
         try {
         if (i == title.length()) {
         i = 0;
         substring = "";
         }
         substring += title.substring(i, i + 1);

         searchCustomerTitleLabel.setText(substring);
         sleep(300);
         searchCustomerTitleLabel.setText("");


         } catch (InterruptedException ex) {
         Logger.getLogger(SearchCustomerDialog.class.getName()).log(Level.SEVERE, null, ex);
         }

         }
         }
         }.start();*/

        updateLesseeButton.setEnabled(false);

        JPopupMenu tabelPopupMenu = new JPopupMenu();
        JMenuItem viewVehicleDetailsItem = new JMenuItem("View leased vehicle details");
        JMenuItem updateVehicleDetailsItem = new JMenuItem("View leased vehicle for update");
        tabelPopupMenu.add(viewVehicleDetailsItem);
        tabelPopupMenu.add(viewVehicleDetailsItem);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane2 = new javax.swing.JLayeredPane();
        searchByLabel = new javax.swing.JLabel();
        searchByComboBox = new javax.swing.JComboBox();
        searchTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        lesseeDetailsPanel = new javax.swing.JPanel();
        lesseeTelNoTextField = new javax.swing.JTextField();
        lesseeIdLabel = new javax.swing.JLabel();
        lesseeIdTextField = new javax.swing.JTextField();
        lesseeNameLabel = new javax.swing.JLabel();
        lesseeNameTextField = new javax.swing.JTextField();
        lesseeNicLabel = new javax.swing.JLabel();
        lesseeNicTextField = new javax.swing.JTextField();
        lesseePrivateAddressLabel = new javax.swing.JLabel();
        lesseePrivateAddressTextField = new javax.swing.JTextField();
        lesseeOfficialAddressLabel = new javax.swing.JLabel();
        lesseeOfficialAddressTextField = new javax.swing.JTextField();
        lesseeTelNoLabel = new javax.swing.JLabel();
        updateLesseeButton = new javax.swing.JButton();
        balancePanel = new javax.swing.JPanel();
        rentalPaymentPanel = new javax.swing.JPanel();
        rentalDescPanel = new javax.swing.JPanel();
        advancFeePanel = new javax.swing.JPanel();
        searchCustomerTitleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        leasingTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        firstGuarantorDetailPanel = new javax.swing.JPanel();
        guarantor1TelNoTextField = new javax.swing.JTextField();
        guarantor1OfficialAddressLabel = new javax.swing.JLabel();
        guarantor1IdTextField = new javax.swing.JTextField();
        guarantor1NameTextField = new javax.swing.JTextField();
        guarantor1OfficialAddressTextField = new javax.swing.JTextField();
        guarantor1PrivateAddressLabel = new javax.swing.JLabel();
        guarantor1IdLabel = new javax.swing.JLabel();
        guaranto1NicLabel = new javax.swing.JLabel();
        guarantor1TelNoLabel = new javax.swing.JLabel();
        guarantor1NameLabel = new javax.swing.JLabel();
        guarantor1PrivateAddressTextField = new javax.swing.JTextField();
        guarantor1NicTextField = new javax.swing.JTextField();
        secondGuarantorDetailPanel = new javax.swing.JPanel();
        guarantor2PrivateAddressLabel = new javax.swing.JLabel();
        guarantor2NameTextField = new javax.swing.JTextField();
        guarantor2OfficialAddressLabel = new javax.swing.JLabel();
        guarantor2IdTextField = new javax.swing.JTextField();
        guarantor2PrivateAddressTextField = new javax.swing.JTextField();
        guarantor2IdLabel = new javax.swing.JLabel();
        guarantor2NicLabel = new javax.swing.JLabel();
        guarantor2TelNoTextField = new javax.swing.JTextField();
        guarantor2NicTextField = new javax.swing.JTextField();
        guarantor2NameLabel = new javax.swing.JLabel();
        guarantor2TelNoLabel = new javax.swing.JLabel();
        guarantor2OfficialAddressTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        searchByLabel.setText("Search By :");
        searchByLabel.setBounds(30, 50, 55, 14);
        jLayeredPane2.add(searchByLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        searchByComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NIC", "Lessee Name", "Lessee ID", "Leasing No", "Registration No", "Chassis No", "Engine No", "" }));
        searchByComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                searchByComboBoxItemStateChanged(evt);
            }
        });
        searchByComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByComboBoxActionPerformed(evt);
            }
        });
        searchByComboBox.setBounds(30, 70, 177, 20);
        jLayeredPane2.add(searchByComboBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyReleased(evt);
            }
        });
        searchTextField.setBounds(210, 70, 230, 20);
        jLayeredPane2.add(searchTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        searchButton.setBounds(450, 70, 98, 23);
        jLayeredPane2.add(searchButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lesseeDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Lessee's Details"));

        lesseeTelNoTextField.setEditable(false);

        lesseeIdLabel.setText("Lessee ID :");

        lesseeIdTextField.setEditable(false);

        lesseeNameLabel.setText("Lessee Name:");

        lesseeNameTextField.setEditable(false);

        lesseeNicLabel.setText("NIC :");

        lesseeNicTextField.setEditable(false);

        lesseePrivateAddressLabel.setText("Private Address :");

        lesseePrivateAddressTextField.setEditable(false);

        lesseeOfficialAddressLabel.setText("Official Address :");

        lesseeOfficialAddressTextField.setEditable(false);

        lesseeTelNoLabel.setText("Tel. No :");

        updateLesseeButton.setText("Update Lessee");
        updateLesseeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateLesseeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lesseeDetailsPanelLayout = new javax.swing.GroupLayout(lesseeDetailsPanel);
        lesseeDetailsPanel.setLayout(lesseeDetailsPanelLayout);
        lesseeDetailsPanelLayout.setHorizontalGroup(
            lesseeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lesseeDetailsPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(lesseeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lesseeDetailsPanelLayout.createSequentialGroup()
                        .addGroup(lesseeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lesseeIdLabel)
                            .addComponent(lesseeNameLabel)
                            .addComponent(lesseeOfficialAddressLabel)
                            .addComponent(lesseeTelNoLabel))
                        .addGap(60, 60, 60)
                        .addGroup(lesseeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(lesseeDetailsPanelLayout.createSequentialGroup()
                                .addGroup(lesseeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lesseeOfficialAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lesseeNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lesseeIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 81, Short.MAX_VALUE))
                            .addGroup(lesseeDetailsPanelLayout.createSequentialGroup()
                                .addComponent(lesseeTelNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(updateLesseeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(lesseeDetailsPanelLayout.createSequentialGroup()
                        .addGroup(lesseeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lesseePrivateAddressLabel)
                            .addComponent(lesseeNicLabel))
                        .addGap(59, 59, 59)
                        .addGroup(lesseeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lesseeNicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lesseePrivateAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        lesseeDetailsPanelLayout.setVerticalGroup(
            lesseeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lesseeDetailsPanelLayout.createSequentialGroup()
                .addGroup(lesseeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lesseeIdLabel)
                    .addComponent(lesseeIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(lesseeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lesseeNameLabel)
                    .addComponent(lesseeNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(lesseeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lesseeNicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lesseeNicLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(lesseeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lesseePrivateAddressLabel)
                    .addComponent(lesseePrivateAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(lesseeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lesseeOfficialAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lesseeOfficialAddressLabel))
                .addGap(9, 9, 9)
                .addGroup(lesseeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lesseeTelNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lesseeTelNoLabel)
                    .addComponent(updateLesseeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        lesseeDetailsPanel.setBounds(30, 100, 630, 210);
        jLayeredPane2.add(lesseeDetailsPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        balancePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Balance"));

        javax.swing.GroupLayout balancePanelLayout = new javax.swing.GroupLayout(balancePanel);
        balancePanel.setLayout(balancePanelLayout);
        balancePanelLayout.setHorizontalGroup(
            balancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 188, Short.MAX_VALUE)
        );
        balancePanelLayout.setVerticalGroup(
            balancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 87, Short.MAX_VALUE)
        );

        balancePanel.setBounds(240, 460, 200, 110);
        jLayeredPane2.add(balancePanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rentalPaymentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Rental Payment"));

        javax.swing.GroupLayout rentalPaymentPanelLayout = new javax.swing.GroupLayout(rentalPaymentPanel);
        rentalPaymentPanel.setLayout(rentalPaymentPanelLayout);
        rentalPaymentPanelLayout.setHorizontalGroup(
            rentalPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 193, Short.MAX_VALUE)
        );
        rentalPaymentPanelLayout.setVerticalGroup(
            rentalPaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 87, Short.MAX_VALUE)
        );

        rentalPaymentPanel.setBounds(30, 460, 205, 110);
        jLayeredPane2.add(rentalPaymentPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rentalDescPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Rental Desription"));

        javax.swing.GroupLayout rentalDescPanelLayout = new javax.swing.GroupLayout(rentalDescPanel);
        rentalDescPanel.setLayout(rentalDescPanelLayout);
        rentalDescPanelLayout.setHorizontalGroup(
            rentalDescPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 211, Short.MAX_VALUE)
        );
        rentalDescPanelLayout.setVerticalGroup(
            rentalDescPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 87, Short.MAX_VALUE)
        );

        rentalDescPanel.setBounds(440, 460, 223, 110);
        jLayeredPane2.add(rentalDescPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        advancFeePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Advance Fee"));

        javax.swing.GroupLayout advancFeePanelLayout = new javax.swing.GroupLayout(advancFeePanel);
        advancFeePanel.setLayout(advancFeePanelLayout);
        advancFeePanelLayout.setHorizontalGroup(
            advancFeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 193, Short.MAX_VALUE)
        );
        advancFeePanelLayout.setVerticalGroup(
            advancFeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 77, Short.MAX_VALUE)
        );

        advancFeePanel.setBounds(30, 580, 205, 100);
        jLayeredPane2.add(advancFeePanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        searchCustomerTitleLabel.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        searchCustomerTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchCustomerTitleLabel.setBounds(0, 0, 1220, 40);
        jLayeredPane2.add(searchCustomerTitleLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        leasingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Leasing No.", "No of Payments", "Total Payment", "Rental Fee", "Due Date", "Commece Date", "End Date", "Down Payment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        leasingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leasingTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(leasingTable);

        jScrollPane1.setBounds(30, 320, 630, 130);
        jLayeredPane2.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setBounds(670, 80, 10, 590);
        jLayeredPane2.add(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        firstGuarantorDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "1st Guarantor's Details", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        guarantor1TelNoTextField.setEditable(false);

        guarantor1OfficialAddressLabel.setText("Official Address :");

        guarantor1IdTextField.setEditable(false);

        guarantor1NameTextField.setEditable(false);

        guarantor1OfficialAddressTextField.setEditable(false);

        guarantor1PrivateAddressLabel.setText("Private Address :");

        guarantor1IdLabel.setText("Guarantor ID :");

        guaranto1NicLabel.setText("NIC :");

        guarantor1TelNoLabel.setText("Tel. No :");

        guarantor1NameLabel.setText("Guarantor Name:");

        guarantor1PrivateAddressTextField.setEditable(false);

        guarantor1NicTextField.setEditable(false);

        javax.swing.GroupLayout firstGuarantorDetailPanelLayout = new javax.swing.GroupLayout(firstGuarantorDetailPanel);
        firstGuarantorDetailPanel.setLayout(firstGuarantorDetailPanelLayout);
        firstGuarantorDetailPanelLayout.setHorizontalGroup(
            firstGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(firstGuarantorDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(firstGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(firstGuarantorDetailPanelLayout.createSequentialGroup()
                        .addGroup(firstGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guarantor1IdLabel)
                            .addComponent(guarantor1NameLabel)
                            .addComponent(guarantor1OfficialAddressLabel)
                            .addComponent(guarantor1TelNoLabel))
                        .addGap(60, 60, 60)
                        .addGroup(firstGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guarantor1OfficialAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guarantor1NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guarantor1IdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guarantor1TelNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(firstGuarantorDetailPanelLayout.createSequentialGroup()
                        .addGroup(firstGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guarantor1PrivateAddressLabel)
                            .addComponent(guaranto1NicLabel))
                        .addGap(59, 59, 59)
                        .addGroup(firstGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guarantor1NicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guarantor1PrivateAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        firstGuarantorDetailPanelLayout.setVerticalGroup(
            firstGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(firstGuarantorDetailPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(firstGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guarantor1IdLabel)
                    .addComponent(guarantor1IdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(firstGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guarantor1NameLabel)
                    .addComponent(guarantor1NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(firstGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guarantor1NicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guaranto1NicLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(firstGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guarantor1PrivateAddressLabel)
                    .addComponent(guarantor1PrivateAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(firstGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guarantor1OfficialAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guarantor1OfficialAddressLabel))
                .addGap(10, 10, 10)
                .addGroup(firstGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guarantor1TelNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guarantor1TelNoLabel))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        firstGuarantorDetailPanel.setBounds(680, 100, 520, 260);
        jLayeredPane2.add(firstGuarantorDetailPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        secondGuarantorDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "2nd Guarantor's Details", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        guarantor2PrivateAddressLabel.setText("Private Address :");

        guarantor2NameTextField.setEditable(false);

        guarantor2OfficialAddressLabel.setText("Official Address :");

        guarantor2IdTextField.setEditable(false);

        guarantor2PrivateAddressTextField.setEditable(false);

        guarantor2IdLabel.setText("Guarantor ID :");

        guarantor2NicLabel.setText("NIC :");

        guarantor2TelNoTextField.setEditable(false);

        guarantor2NicTextField.setEditable(false);

        guarantor2NameLabel.setText("Guarantor Name:");

        guarantor2TelNoLabel.setText("Tel. No :");

        guarantor2OfficialAddressTextField.setEditable(false);

        javax.swing.GroupLayout secondGuarantorDetailPanelLayout = new javax.swing.GroupLayout(secondGuarantorDetailPanel);
        secondGuarantorDetailPanel.setLayout(secondGuarantorDetailPanelLayout);
        secondGuarantorDetailPanelLayout.setHorizontalGroup(
            secondGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secondGuarantorDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(secondGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(secondGuarantorDetailPanelLayout.createSequentialGroup()
                        .addGroup(secondGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guarantor2IdLabel)
                            .addComponent(guarantor2NameLabel)
                            .addComponent(guarantor2OfficialAddressLabel)
                            .addComponent(guarantor2TelNoLabel))
                        .addGap(60, 60, 60)
                        .addGroup(secondGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guarantor2OfficialAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guarantor2NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guarantor2IdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guarantor2TelNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(secondGuarantorDetailPanelLayout.createSequentialGroup()
                        .addGroup(secondGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guarantor2PrivateAddressLabel)
                            .addComponent(guarantor2NicLabel))
                        .addGap(59, 59, 59)
                        .addGroup(secondGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guarantor2NicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guarantor2PrivateAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        secondGuarantorDetailPanelLayout.setVerticalGroup(
            secondGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secondGuarantorDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(secondGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guarantor2IdLabel)
                    .addComponent(guarantor2IdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(secondGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guarantor2NameLabel)
                    .addComponent(guarantor2NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(secondGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guarantor2NicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guarantor2NicLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(secondGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guarantor2PrivateAddressLabel)
                    .addComponent(guarantor2PrivateAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(secondGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guarantor2OfficialAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guarantor2OfficialAddressLabel))
                .addGap(10, 10, 10)
                .addGroup(secondGuarantorDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guarantor2TelNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guarantor2TelNoLabel))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        secondGuarantorDetailPanel.setBounds(680, 360, 529, 248);
        jLayeredPane2.add(secondGuarantorDetailPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1219, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchByComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_searchByComboBoxItemStateChanged
        searchTextField.requestFocus();
    }//GEN-LAST:event_searchByComboBoxItemStateChanged

    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyReleased
        String text = searchTextField.getText();
        char c = evt.getKeyChar();
        if (text.length() < 10) {
            if (!Character.isDigit(c) && c != 46) {
                searchTextField.setText(text.substring(0, text.length() - 1));
            }
        } else if (text.length() == 10) {
            if (c != 'v' || c != 'V') {
                searchTextField.setText(text.substring(0, text.length() - 1));
            }
        }
    }//GEN-LAST:event_searchTextFieldKeyReleased

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed
        searchButton.setEnabled(true);
        searchButton.requestFocus();
    }//GEN-LAST:event_searchTextFieldActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        try {
            ServerConnector serverConnector = ServerConnector.getServerConnector();
            ClientController clientController = serverConnector.getClientController();
            LeasedVehicleController leasedVehicleController = serverConnector.getLeasedVehicleController();
            LeasingController leasingController = serverConnector.getLeasingController();

            String text = (String) searchByComboBox.getSelectedItem();

            if (text.equals("NIC")) {
                String searchText = searchTextField.getText();

                try {
                    Client client = clientController.searchClientDetailsByNIC(searchText);
                    lesseeIdTextField.setText(client.getClientId());
                    lesseeNameTextField.setText(client.getName());
                    lesseeNicTextField.setText(text);
                    lesseePrivateAddressTextField.setText(client.getPrivateAddress());
                    lesseeOfficialAddressTextField.setText(client.getOfficialAddress());
                    lesseeTelNoTextField.setText(client.getContactNo());

                    DefaultTableModel dtm = (DefaultTableModel) leasingTable.getModel();
                    ArrayList<Leasing> leasings = client.getLeasingList();

                    for (Leasing l : leasings) {
                        dtm.addRow(new Object[]{l.getLeasingNo(), l.getNoOfPayments(), l.getLeasingCapital(), l.getRentalFee(), l.getDueDate(), l.getCommenceDate(), l.getEndDate(), l.getDownPayment()});
                    }
                    updateLesseeButton.setEnabled(true);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Can't find any lessee.", "Message", JOptionPane.PLAIN_MESSAGE);
                }

            } else if (text.equals("Lessee ID")) {
                String searchText = searchTextField.getText();

                try {
                    Client client = clientController.searchClientDetailsByID(searchText);
                    lesseeIdTextField.setText(searchText);
                    lesseeNameTextField.setText(client.getName());
                    lesseeNicTextField.setText(client.getNic());
                    lesseePrivateAddressTextField.setText(client.getPrivateAddress());
                    lesseeOfficialAddressTextField.setText(client.getOfficialAddress());
                    lesseeTelNoTextField.setText(client.getContactNo());

                    DefaultTableModel dtm = (DefaultTableModel) leasingTable.getModel();
                    ArrayList<Leasing> leasings = client.getLeasingList();

                    for (Leasing l : leasings) {
                        dtm.addRow(new Object[]{l.getLeasingNo(), l.getNoOfPayments(), l.getLeasingCapital(), l.getRentalFee(), l.getDueDate(), l.getCommenceDate(), l.getEndDate(), l.getDownPayment()});
                    }
                    updateLesseeButton.setEnabled(true);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Can't find any lessee.", "Message", JOptionPane.PLAIN_MESSAGE);
                }

            } else if (text.equals("Leasing No")) {
                String searchText = searchTextField.getText();

                try {
                    Client client = leasingController.searchClientByLeasingNo(searchText);
                    lesseeIdTextField.setText(client.getClientId());
                    lesseeNameTextField.setText(client.getName());
                    lesseeNicTextField.setText(client.getNic());
                    lesseePrivateAddressTextField.setText(client.getPrivateAddress());
                    lesseeOfficialAddressTextField.setText(client.getOfficialAddress());
                    lesseeTelNoTextField.setText(client.getContactNo());

                    DefaultTableModel dtm = (DefaultTableModel) leasingTable.getModel();
                    ArrayList<Leasing> leasings = client.getLeasingList();

                    for (Leasing l : leasings) {
                        dtm.addRow(new Object[]{l.getLeasingNo(), l.getNoOfPayments(), l.getLeasingCapital(), l.getRentalFee(), l.getDueDate(), l.getCommenceDate(), l.getEndDate(), l.getDownPayment()});
                    }
                    updateLesseeButton.setEnabled(true);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Can't find any lessee.", "Message", JOptionPane.PLAIN_MESSAGE);
                }
            } else if (text.equals("Registration No")) {
                String searchText = searchTextField.getText();

                try {
                    LeasedVehicle vehicle = leasedVehicleController.searchClientByRegistrationNo(searchText);
                    Client client = vehicle.getClientDetails();
                    lesseeIdTextField.setText(client.getClientId());
                    lesseeNameTextField.setText(client.getName());
                    lesseeNicTextField.setText(client.getNic());
                    lesseePrivateAddressTextField.setText(client.getPrivateAddress());
                    lesseeOfficialAddressTextField.setText(client.getOfficialAddress());
                    lesseeTelNoTextField.setText(client.getContactNo());

                    DefaultTableModel dtm = (DefaultTableModel) leasingTable.getModel();
                    ArrayList<Leasing> leasings = client.getLeasingList();

                    for (Leasing l : leasings) {
                        dtm.addRow(new Object[]{l.getLeasingNo(), l.getNoOfPayments(), l.getLeasingCapital(), l.getRentalFee(), l.getDueDate(), l.getCommenceDate(), l.getEndDate(), l.getDownPayment()});
                    }
                    updateLesseeButton.setEnabled(true);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Can't find any lessee.", "Message", JOptionPane.PLAIN_MESSAGE);
                }
            } else if (text.equals("Chassis No")) {
                String searchText = searchTextField.getText();

                try {
                    LeasedVehicle vehicle = leasedVehicleController.searchClientByChassisNo(searchText);
                    Client client = vehicle.getClientDetails();
                    lesseeIdTextField.setText(client.getClientId());
                    lesseeNameTextField.setText(client.getName());
                    lesseeNicTextField.setText(client.getNic());
                    lesseePrivateAddressTextField.setText(client.getPrivateAddress());
                    lesseeOfficialAddressTextField.setText(client.getOfficialAddress());
                    lesseeTelNoTextField.setText(client.getContactNo());

                    DefaultTableModel dtm = (DefaultTableModel) leasingTable.getModel();
                    ArrayList<Leasing> leasings = client.getLeasingList();

                    for (Leasing l : leasings) {
                        dtm.addRow(new Object[]{l.getLeasingNo(), l.getNoOfPayments(), l.getLeasingCapital(), l.getRentalFee(), l.getDueDate(), l.getCommenceDate(), l.getEndDate(), l.getDownPayment()});
                    }
                    updateLesseeButton.setEnabled(true);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Can't find any lessee.", "Message", JOptionPane.PLAIN_MESSAGE);
                }
            } else if (text.equals("Engine No")) {
                String searchText = searchTextField.getText();

                try {
                    LeasedVehicle vehicle = leasedVehicleController.searchClientByEngineNo(searchText);
                    Client client = vehicle.getClientDetails();
                    lesseeIdTextField.setText(client.getClientId());
                    lesseeNameTextField.setText(client.getName());
                    lesseeNicTextField.setText(client.getNic());
                    lesseePrivateAddressTextField.setText(client.getPrivateAddress());
                    lesseeOfficialAddressTextField.setText(client.getOfficialAddress());
                    lesseeTelNoTextField.setText(client.getContactNo());

                    DefaultTableModel dtm = (DefaultTableModel) leasingTable.getModel();
                    ArrayList<Leasing> leasings = client.getLeasingList();

                    for (Leasing l : leasings) {
                        dtm.addRow(new Object[]{l.getLeasingNo(), l.getNoOfPayments(), l.getLeasingCapital(), l.getRentalFee(), l.getDueDate(), l.getCommenceDate(), l.getEndDate(), l.getDownPayment()});
                    }
                    updateLesseeButton.setEnabled(true);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Can't find any lessee.", "Message", JOptionPane.PLAIN_MESSAGE);
                }
            } else if (text.equals("Lessee Name")) {
                String searchText = searchTextField.getText();
                try {
                    Client client = clientController.searchClientByName(searchText);
                    lesseeIdTextField.setText(client.getClientId());
                    lesseeNameTextField.setText(client.getName());
                    lesseeNicTextField.setText(client.getNic());
                    lesseePrivateAddressTextField.setText(client.getPrivateAddress());
                    lesseeOfficialAddressTextField.setText(client.getOfficialAddress());
                    lesseeTelNoTextField.setText(client.getContactNo());

                    DefaultTableModel dtm = (DefaultTableModel) leasingTable.getModel();
                    ArrayList<Leasing> leasings = client.getLeasingList();

                    for (Leasing l : leasings) {
                        dtm.addRow(new Object[]{l.getLeasingNo(), l.getNoOfPayments(), l.getLeasingCapital(), l.getRentalFee(), l.getDueDate(), l.getCommenceDate(), l.getEndDate(), l.getDownPayment()});
                    }
                    updateLesseeButton.setEnabled(true);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Can't find any lessee.", "Message", JOptionPane.PLAIN_MESSAGE);
                }
            }
        } catch (NotBoundException | MalformedURLException | RemoteException | ClassNotFoundException ex) {
            Logger.getLogger(SearchCustomerDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void leasingTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leasingTableMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            try {
                ServerConnector serverConnector = ServerConnector.getServerConnector();
                GuarentorController guarentorController = serverConnector.getGuarentorController();

                String leasingNo = (String) leasingTable.getValueAt(leasingTable.getSelectedRow(), 0);

                ArrayList<Guarentor> guarentors = guarentorController.getGuarentorList(leasingNo);

                Guarentor guarentor1 = guarentors.get(0);
                guarantor1IdTextField.setText(guarentor1.getGuarentorId());
                guarantor1NameTextField.setText(guarentor1.getGuarentorName());
                guarantor1NicTextField.setText(guarentor1.getNic());
                guarantor1PrivateAddressTextField.setText(guarentor1.getPrivateAddress());
                guarantor1OfficialAddressTextField.setText(guarentor1.getOfficialAddress());
                guarantor1TelNoTextField.setText(guarentor1.getContactNo());

                Guarentor guarentor2 = guarentors.get(1);
                guarantor2IdTextField.setText(guarentor2.getGuarentorId());
                guarantor2NameTextField.setText(guarentor2.getGuarentorName());
                guarantor2NicTextField.setText(guarentor2.getNic());
                guarantor1PrivateAddressTextField.setText(guarentor1.getPrivateAddress());
                guarantor2OfficialAddressTextField.setText(guarentor2.getOfficialAddress());
                guarantor2TelNoTextField.setText(guarentor2.getContactNo());
            } catch (NotBoundException | MalformedURLException | RemoteException | ClassNotFoundException | SQLException ex) {
                Logger.getLogger(SearchCustomerDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (evt.getButton() == MouseEvent.BUTTON3) {
            JPopupMenu popupMenu = new JPopupMenu();
            JMenuItem item1 = new JMenuItem("view leased vehicle");
            JMenuItem item2 = new JMenuItem("update leased vehicle");
            popupMenu.add(item1);
            popupMenu.add(item2);
            popupMenu.setLocation(evt.getLocationOnScreen());
            popupMenu.show(leasingTable, evt.getX(), evt.getY());
            popupMenu.setVisible(true);
        }
    }//GEN-LAST:event_leasingTableMouseClicked

    private void searchByComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchByComboBoxActionPerformed

    private void updateLesseeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateLesseeButtonActionPerformed
        Client client = new Client();

        client.setClientId(lesseeIdTextField.getText());
        client.setName(lesseeNameTextField.getText());
        client.setNic(lesseeNicTextField.getText());
        client.setPrivateAddress(lesseePrivateAddressTextField.getText());
        client.setOfficialAddress(lesseeOfficialAddressTextField.getText());
        client.setContactNo(lesseeTelNoTextField.getText());


        UpdateCustomer updateCustomer = new UpdateCustomer(null, true);
        updateCustomer.setUpdateLesseeFields(client);
        updateCustomer.setVisible(true);
    }//GEN-LAST:event_updateLesseeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchCustomerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchCustomerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchCustomerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchCustomerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SearchCustomerDialog dialog = new SearchCustomerDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel advancFeePanel;
    private javax.swing.JPanel balancePanel;
    private javax.swing.JPanel firstGuarantorDetailPanel;
    private javax.swing.JLabel guaranto1NicLabel;
    private javax.swing.JLabel guarantor1IdLabel;
    private javax.swing.JTextField guarantor1IdTextField;
    private javax.swing.JLabel guarantor1NameLabel;
    private javax.swing.JTextField guarantor1NameTextField;
    private javax.swing.JTextField guarantor1NicTextField;
    private javax.swing.JLabel guarantor1OfficialAddressLabel;
    private javax.swing.JTextField guarantor1OfficialAddressTextField;
    private javax.swing.JLabel guarantor1PrivateAddressLabel;
    private javax.swing.JTextField guarantor1PrivateAddressTextField;
    private javax.swing.JLabel guarantor1TelNoLabel;
    private javax.swing.JTextField guarantor1TelNoTextField;
    private javax.swing.JLabel guarantor2IdLabel;
    private javax.swing.JTextField guarantor2IdTextField;
    private javax.swing.JLabel guarantor2NameLabel;
    private javax.swing.JTextField guarantor2NameTextField;
    private javax.swing.JLabel guarantor2NicLabel;
    private javax.swing.JTextField guarantor2NicTextField;
    private javax.swing.JLabel guarantor2OfficialAddressLabel;
    private javax.swing.JTextField guarantor2OfficialAddressTextField;
    private javax.swing.JLabel guarantor2PrivateAddressLabel;
    private javax.swing.JTextField guarantor2PrivateAddressTextField;
    private javax.swing.JLabel guarantor2TelNoLabel;
    private javax.swing.JTextField guarantor2TelNoTextField;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable leasingTable;
    private javax.swing.JPanel lesseeDetailsPanel;
    private javax.swing.JLabel lesseeIdLabel;
    private javax.swing.JTextField lesseeIdTextField;
    private javax.swing.JLabel lesseeNameLabel;
    private javax.swing.JTextField lesseeNameTextField;
    private javax.swing.JLabel lesseeNicLabel;
    private javax.swing.JTextField lesseeNicTextField;
    private javax.swing.JLabel lesseeOfficialAddressLabel;
    private javax.swing.JTextField lesseeOfficialAddressTextField;
    private javax.swing.JLabel lesseePrivateAddressLabel;
    private javax.swing.JTextField lesseePrivateAddressTextField;
    private javax.swing.JLabel lesseeTelNoLabel;
    private javax.swing.JTextField lesseeTelNoTextField;
    private javax.swing.JPanel rentalDescPanel;
    private javax.swing.JPanel rentalPaymentPanel;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox searchByComboBox;
    private javax.swing.JLabel searchByLabel;
    private javax.swing.JLabel searchCustomerTitleLabel;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JPanel secondGuarantorDetailPanel;
    private javax.swing.JButton updateLesseeButton;
    // End of variables declaration//GEN-END:variables
}
